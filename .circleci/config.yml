version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/recipeAPI
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.7.9
        auth:
          username: $DOCKER_USERNAME  # project UI env-var reference
          password: $DOCKERHUB_PASSWORD  # project UI env-var reference
      
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory    
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages   

      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          # key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }} 

      - run:
          name: docker compose installation
          command: |
            sudo pip install docker-compose

      - run:
          name: pip installation
          command: |
            sudo pip install pipenv
            sudo pip install --upgrade pip
            pipenv install
            sudo pip install -r requirements.txt

      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          # key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "venv"
      - run:
          name: running test: docker compose 
          command: |
            mkdir test-results
            docker-compose run app sh -c "python manage.py wait_for_db && python manage.py test && flake8"
          # cd app
          # pipenv run python manage.py test && flake8

      - run:
          name: "Print an env var stored in a Context"
          command: |
            echo ${DOCKER_USERNAME}
          # echo ${DOCKERHUB_PASSWORD}
        
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1 